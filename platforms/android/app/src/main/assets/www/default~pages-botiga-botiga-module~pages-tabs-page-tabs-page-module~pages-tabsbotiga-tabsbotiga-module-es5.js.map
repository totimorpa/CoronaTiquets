{"version":3,"sources":["src/app/pages/botiga/botiga.page.html","src/app/pages/botiga/botiga-routing.module.ts","src/app/pages/botiga/botiga.module.ts","src/app/pages/botiga/botiga.page.scss","src/app/pages/botiga/botiga.page.ts","src/app/providers/conference-data.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div *ngFor=\\\"let speaker of speakers\\\">\\n  <div *ngIf='merceria(speaker.name)'>\\n    <ion-header>\\n      <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n          <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>{{speaker.name}}</ion-title>\\n      </ion-toolbar>\\n    </ion-header>\\n  </div>\\n</div>\\n\\n<ion-content fullscreen=\\\"true\\\">\\n  <div *ngFor=\\\"let speaker of speakers\\\">\\n    <div *ngIf='merceria(speaker.name)'>\\n\\n      <img class=\\\"foto\\\" [src]=\\\"speaker.profilePic\\\" [alt]=\\\"speaker.name + ' profile picture'\\\">\\n      <ion-list>\\n        <ion-item lines='none'>\\n          <h2>{{speaker.name}}</h2>\\n          <ion-button mode='ios' fill='clear' slot='end'>\\n            <ion-icon name=\\\"create-outline\\\"></ion-icon>Editar\\n          </ion-button>\\n        </ion-item>\\n        <ion-item>\\n          <p>{{speaker.about}}</p>\\n          <ion-button mode='ios' fill='clear' slot='end'>\\n            <ion-icon name=\\\"create-outline\\\"></ion-icon>Editar\\n          </ion-button>\\n        </ion-item>\\n        <ion-item lines=none>\\n          <p><b>Ubicaci√≥</b> </p>\\n          <ion-button mode='ios' fill='clear' slot='end'>\\n            <ion-icon name=\\\"create-outline\\\"></ion-icon>Editar\\n          </ion-button>\\n        </ion-item>\\n        <ion-item style=\\\"font-size: small\\\">{{speaker.carrer}}<br>{{speaker.cp}}<br>{{speaker.location}}</ion-item>\\n        <ion-item lines='none'>\\n          <p><b>Horari d'apertura</b></p>\\n          <ion-button mode='ios' fill='clear' slot='end'>\\n            <ion-icon name=\\\"create-outline\\\"></ion-icon>Editar\\n          </ion-button>\\n\\n        </ion-item>\\n        <ion-item class=petit lines=none>\\n          <ion-label>Hora d'apertura</ion-label>\\n          <ion-datetime display-format=\\\"h:mm A\\\" picker-format=\\\"h:mm A\\\" value=\\\"1990-02-19T07:00Z\\\"></ion-datetime>\\n        </ion-item>\\n        <ion-item class=petit>\\n          <ion-label>Hora de tancament</ion-label>\\n          <ion-datetime display-format=\\\"h:mm A\\\" picker-format=\\\"h:mm A\\\" value=\\\"1990-02-19T18:00Z\\\"></ion-datetime>\\n        </ion-item>\\n\\n        <ion-item lines=none>\\n          <ion-label><b>Serveis que ofereixo</b></ion-label>\\n          <ion-button mode='ios' fill='clear' slot='end'>\\n            <ion-icon name=\\\"create-outline\\\"></ion-icon>Guardar canvis\\n          </ion-button>\\n        </ion-item>\\n\\n        <ion-item class=petit lines=none>\\n          <ion-label>Tickets</ion-label>\\n          <ion-checkbox slot=start [checked]=\\\"speaker.serveis.includes('t')\\\"></ion-checkbox>\\n        </ion-item>\\n        <ion-item class=petit lines=none>\\n          <ion-label>Entrega a domicili</ion-label>\\n          <ion-checkbox slot=start [checked]=\\\"speaker.serveis.includes('e')\\\"></ion-checkbox>\\n        </ion-item>\\n        <ion-item class=petit lines=none>\\n          <ion-label>Comanda on-line</ion-label>\\n          <ion-checkbox slot=start [checked]=\\\"speaker.serveis.includes('o')\\\"></ion-checkbox>\\n        </ion-item>\\n\\n\\n      </ion-list>\\n    </div>\\n  </div>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BotigaPage } from './botiga.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BotigaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BotigaPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BotigaPageRoutingModule } from './botiga-routing.module';\n\nimport { BotigaPage } from './botiga.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    BotigaPageRoutingModule\n  ],\n  declarations: [BotigaPage]\n})\nexport class BotigaPageModule {}\n\n","export default \".foto {\\n  padding: 0px;\\n}\\n\\n.petit {\\n  font-size: small;\\n  height: 3em;\\n}\\n\\nion-item {\\n  --min-height: 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90b3RpbXAvRGVza3RvcC9Db3JvbmFUaXF1ZXRzL3NyYy9hcHAvcGFnZXMvYm90aWdhL2JvdGlnYS5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2JvdGlnYS9ib3RpZ2EucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQ0NKOztBREVBO0VBQ0ksZ0JBQUE7RUFDQSxXQUFBO0FDQ0o7O0FESUE7RUFDSSxpQkFBQTtBQ0RKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvYm90aWdhL2JvdGlnYS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm90byB7XG4gICAgcGFkZGluZzowcHhcbn1cblxuLnBldGl0IHtcbiAgICBmb250LXNpemU6IHNtYWxsO1xuICAgIGhlaWdodDozZW07XG5cblxufVxuXG5pb24taXRlbSB7XG4gICAgLS1taW4taGVpZ2h0OiAwcHg7XG59XG5cbiIsIi5mb3RvIHtcbiAgcGFkZGluZzogMHB4O1xufVxuXG4ucGV0aXQge1xuICBmb250LXNpemU6IHNtYWxsO1xuICBoZWlnaHQ6IDNlbTtcbn1cblxuaW9uLWl0ZW0ge1xuICAtLW1pbi1oZWlnaHQ6IDBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ConferenceData } from '../../providers/conference-data';\n\n\n@Component({\n  selector: 'app-botiga',\n  templateUrl: './botiga.page.html',\n  styleUrls: ['./botiga.page.scss'],\n})\nexport class BotigaPage implements OnInit {\n  speakers: any[] = [];\n\n  constructor(\n    \n    public router: Router,\n    public confData: ConferenceData,\n  ) {}\n\n\n  ngOnInit() {\n  }\n  botiga() {\n    this.router.navigateByUrl('/botiga');\n  }\n  tiquets() {\n    this.router.navigateByUrl('/tiquets');\n  }\n  calendari() {\n    this.router.navigateByUrl('/calendari')\n  }\n  ionViewDidEnter() {\n    this.confData.getSpeakers().subscribe((speakers: any[]) => {\n      this.speakers = speakers;\n    });\n  }\n  merceria(a){\n    return a==\"ElectroBoom BCN\"\n  }\n}\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { UserData } from './user-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConferenceData {\n  data: any;\n\n  constructor(public http: HttpClient, public user: UserData) {}\n\n  load(): any {\n    if (this.data) {\n      return of(this.data);\n    } else {\n      return this.http\n        .get('assets/data/data.json')\n        .pipe(map(this.processData, this));\n    }\n  }\n\n  processData(data: any) {\n    // just some good 'ol JS fun with objects and arrays\n    // build up the data by linking speakers to sessions\n    this.data = data;\n\n    // loop through each day in the schedule\n    this.data.schedule.forEach((day: any) => {\n      // loop through each timeline group in the day\n      day.groups.forEach((group: any) => {\n        // loop through each session in the timeline group\n        group.sessions.forEach((session: any) => {\n          session.speakers = [];\n          if (session.speakerNames) {\n            session.speakerNames.forEach((speakerName: any) => {\n              const speaker = this.data.speakers.find(\n                (s: any) => s.name === speakerName\n              );\n              if (speaker) {\n                session.speakers.push(speaker);\n                speaker.sessions = speaker.sessions || [];\n                speaker.sessions.push(session);\n              }\n            });\n          }\n        });\n      });\n    });\n\n    return this.data;\n  }\n\n  getTimeline(\n    dayIndex: number,\n    queryText = '',\n    excludeTracks: any[] = [],\n    segment = 'all'\n  ) {\n    return this.load().pipe(\n      map((data: any) => {\n        const day = data.schedule[dayIndex];\n        day.shownSessions = 0;\n\n        queryText = queryText.toLowerCase().replace(/,|\\.|-/g, ' ');\n        const queryWords = queryText.split(' ').filter(w => !!w.trim().length);\n\n        day.groups.forEach((group: any) => {\n          group.hide = true;\n\n          group.sessions.forEach((session: any) => {\n            // check if this session should show or not\n            this.filterSession(session, queryWords, excludeTracks, segment);\n\n            if (!session.hide) {\n              // if this session is not hidden then this group should show\n              group.hide = false;\n              day.shownSessions++;\n            }\n          });\n        });\n\n        return day;\n      })\n    );\n  }\n\n  filterSession(\n    session: any,\n    queryWords: string[],\n    excludeTracks: any[],\n    segment: string\n  ) {\n    let matchesQueryText = false;\n    if (queryWords.length) {\n      // of any query word is in the session name than it passes the query test\n      queryWords.forEach((queryWord: string) => {\n        if (session.name.toLowerCase().indexOf(queryWord) > -1) {\n          matchesQueryText = true;\n        }\n      });\n    } else {\n      // if there are no query words then this session passes the query test\n      matchesQueryText = true;\n    }\n\n    // if any of the sessions tracks are not in the\n    // exclude tracks then this session passes the track test\n    let matchesTracks = false;\n    session.tracks.forEach((trackName: string) => {\n      if (excludeTracks.indexOf(trackName) === -1) {\n        matchesTracks = true;\n      }\n    });\n\n    // if the segment is 'favorites', but session is not a user favorite\n    // then this session does not pass the segment test\n    let matchesSegment = false;\n    if (segment === 'favorites') {\n      if (this.user.hasFavorite(session.name)) {\n        matchesSegment = true;\n      }\n    } else {\n      matchesSegment = true;\n    }\n\n    // all tests must be true if it should not be hidden\n    session.hide = !(matchesQueryText && matchesTracks && matchesSegment);\n  }\n\n  getSpeakers() {\n    return this.load().pipe(\n      map((data: any) => {\n        return data.speakers.sort((a: any, b: any) => {\n          const aName = a.name.split(' ').pop();\n          const bName = b.name.split(' ').pop();\n          return aName.localeCompare(bName);\n        });\n      })\n    );\n  }\n\n  getBotiga() {\n    return this.load().pipe(\n      map((data: any) => {\n        return data.botiga.sort((a: any, b: any) => {\n          const aName = a.name.split(' ').pop();\n          const bName = b.name.split(' ').pop();\n          return aName.localeCompare(bName);\n        });\n      })\n    );\n  }\n\n  getTracks() {\n    return this.load().pipe(\n      map((data: any) => {\n        return data.tracks.sort();\n      })\n    );\n  }\n\n  getMap() {\n    return this.load().pipe(\n      map((data: any) => {\n        return data.map;\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///","file":"default~pages-botiga-botiga-module~pages-tabs-page-tabs-page-module~pages-tabsbotiga-tabsbotiga-module-es5.js"}